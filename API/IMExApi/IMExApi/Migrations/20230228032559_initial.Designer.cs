// <auto-generated />
using System;
using IMExApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMExApi.Migrations
{
    [DbContext(typeof(IMExDbContext))]
    [Migration("20230228032559_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IMExApi.Models.Business", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Description")
                        .HasName("Business_Description");

                    b.HasAlternateKey("Name")
                        .HasName("Business_Name");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            Description = "Downstream Business",
                            Name = "Downstream"
                        },
                        new
                        {
                            Id = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            Description = "Gas Business",
                            Name = "Gas"
                        },
                        new
                        {
                            Id = new Guid("09d96c70-294e-486f-8fb0-624983bcef62"),
                            Description = "PD&T Business",
                            Name = "PD&T"
                        },
                        new
                        {
                            Id = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            Description = "Upstream Business",
                            Name = "Upstream"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Coordinate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Coordinate_Name");

                    b.ToTable("Coordinates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("ed5d5d3f-819b-4da3-82f4-19a5dc5eba7d"),
                            Name = "A:1"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Discipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Discipline_Name");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac1f5b06-1699-4673-9db8-77f4ea3dd0e8"),
                            Name = "Electrical"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.ElectricalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("ElectricalRating_Name");

                    b.ToTable("ElectricalRatings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("7cbbc8ca-5779-45c0-a08e-24c6bf8240f6"),
                            Name = "30 VDC 200mA"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateDeleted")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateDeleted");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdated");

                    b.Property<Guid>("Id_Coordinate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Coordinate");

                    b.Property<Guid>("Id_CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_CreatedBy");

                    b.Property<Guid>("Id_DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_DeletedBy");

                    b.Property<Guid>("Id_Discipline")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Discipline");

                    b.Property<Guid>("Id_ElectricalRating")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_ElectricalRating");

                    b.Property<Guid>("Id_HACDwgNo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_HACDwgNo");

                    b.Property<Guid>("Id_IECExCertificateAuthority")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_IECExCertificateAuthority");

                    b.Property<Guid>("Id_IECExCertificateCategory")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_IECExCertificateCategory");

                    b.Property<Guid>("Id_IECExCertificateDetail")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_IECExCertificateDetail");

                    b.Property<Guid>("Id_IECExCertificateNo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_IECExCertificateNo");

                    b.Property<Guid>("Id_LocationOne")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_LocationOne");

                    b.Property<Guid>("Id_LocationTwo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_LocationTwo");

                    b.Property<Guid>("Id_Manufacturer")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Manufacturer");

                    b.Property<Guid>("Id_Model")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Model");

                    b.Property<Guid>("Id_OPU")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_OPU");

                    b.Property<Guid>("Id_Platform")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Platform");

                    b.Property<Guid>("Id_ProtectionType")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_ProtectionType");

                    b.Property<Guid>("Id_Purpose")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Purpose");

                    b.Property<Guid>("Id_SerialNo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_SerialNo");

                    b.Property<Guid>("Id_UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_UpdatedBy");

                    b.Property<Guid>("Id_Zone")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.Property<string>("TagNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TagNo");

                    b.HasKey("Id");

                    b.HasAlternateKey("TagNo")
                        .HasName("TagNo");

                    b.HasIndex("Id_Coordinate");

                    b.HasIndex("Id_Discipline");

                    b.HasIndex("Id_ElectricalRating");

                    b.HasIndex("Id_HACDwgNo");

                    b.HasIndex("Id_IECExCertificateAuthority");

                    b.HasIndex("Id_IECExCertificateCategory");

                    b.HasIndex("Id_IECExCertificateDetail");

                    b.HasIndex("Id_IECExCertificateNo");

                    b.HasIndex("Id_LocationOne");

                    b.HasIndex("Id_LocationTwo");

                    b.HasIndex("Id_Manufacturer");

                    b.HasIndex("Id_Model");

                    b.HasIndex("Id_OPU");

                    b.HasIndex("Id_Platform");

                    b.HasIndex("Id_ProtectionType");

                    b.HasIndex("Id_Purpose");

                    b.HasIndex("Id_SerialNo");

                    b.HasIndex("Id_Zone");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b79a0707-5795-41a5-a0b8-28893db58c62"),
                            Active = true,
                            DateCreated = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(8217),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCoordinate = new Guid("ed5d5d3f-819b-4da3-82f4-19a5dc5eba7d"),
                            IdCreatedBy = new Guid("eb47cb7a-eeae-4867-be98-8566a9ffe208"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDiscipline = new Guid("ac1f5b06-1699-4673-9db8-77f4ea3dd0e8"),
                            IdElectricalRating = new Guid("7cbbc8ca-5779-45c0-a08e-24c6bf8240f6"),
                            IdHACDwgNo = new Guid("0a5567e3-a8ad-4c3d-a6d5-23996ac27c68"),
                            IdIECExCertificateAuthority = new Guid("c93078e3-7067-4493-a5ad-0a312731bae9"),
                            IdIECExCertificateCategory = new Guid("bec84a12-db91-4cb9-999e-bdf44e74e109"),
                            IdIECExCertificateDetail = new Guid("0ee93cef-fd02-4232-aefa-d4b82b651421"),
                            IdIECExCertificateNo = new Guid("db02b94f-6fcf-40ee-8fb4-7da02c74c1b6"),
                            IdLocationOne = new Guid("335529ad-04c4-4934-a319-9c3e2d428c02"),
                            IdLocationTwo = new Guid("a64c5cab-964f-4c37-9629-d9e35671bc81"),
                            IdManufacturer = new Guid("03ddb1e6-7510-46ec-af6a-c4bef07efb02"),
                            IdModel = new Guid("2160fa79-a8d4-4ed0-9583-92bbd572726c"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdPlatform = new Guid("060128ee-e126-494d-979f-767f203f11a4"),
                            IdProtectionType = new Guid("e045fb56-ffae-4e57-b6bf-0b267739c765"),
                            IdPurpose = new Guid("274ab1b4-75fc-4a71-babf-fb8101a2634b"),
                            IdSerialNo = new Guid("bf8e4e4b-ee85-42f3-a43e-2b84e88b1d1e"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdZone = new Guid("dc288ecb-841c-4c6a-b34f-91256ee183d8"),
                            Name = "Motor",
                            TagNo = "E2460A"
                        },
                        new
                        {
                            Id = new Guid("34b0f38e-1603-47fd-bed9-37e254324336"),
                            Active = true,
                            DateCreated = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(8234),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCoordinate = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdCreatedBy = new Guid("eb47cb7a-eeae-4867-be98-8566a9ffe208"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDiscipline = new Guid("ac1f5b06-1699-4673-9db8-77f4ea3dd0e8"),
                            IdElectricalRating = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdHACDwgNo = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdIECExCertificateAuthority = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdIECExCertificateCategory = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdIECExCertificateDetail = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdIECExCertificateNo = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdLocationOne = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdLocationTwo = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdManufacturer = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdModel = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdPlatform = new Guid("060128ee-e126-494d-979f-767f203f11a4"),
                            IdProtectionType = new Guid("e045fb56-ffae-4e57-b6bf-0b267739c765"),
                            IdPurpose = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdSerialNo = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdZone = new Guid("dc288ecb-841c-4c6a-b34f-91256ee183d8"),
                            Name = "Motor",
                            TagNo = "E3100A"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Description")
                        .HasName("Field_Description");

                    b.HasAlternateKey("Name")
                        .HasName("Field_Name");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b189b3ed-c6f8-4c49-8b2c-3f5d4dd4a3f6"),
                            Description = "Angsi Field or Plant",
                            Name = "Angsi"
                        },
                        new
                        {
                            Id = new Guid("254c3a4b-91a1-4077-b89c-757fc69f5910"),
                            Description = "B11 Field or Plant",
                            Name = "B11"
                        },
                        new
                        {
                            Id = new Guid("2230a41f-5200-4c9e-aa85-5d9bbfed8fc6"),
                            Description = "Baram Field or Plant",
                            Name = "Baram"
                        },
                        new
                        {
                            Id = new Guid("b69125e2-89cc-4d96-9db4-9ca9297da146"),
                            Description = "Bayan Field or Plant",
                            Name = "Bayan"
                        },
                        new
                        {
                            Id = new Guid("d9c7b872-c002-49e8-85ef-14db7a9ca88d"),
                            Description = "Bekok Field or Plant",
                            Name = "Bekok"
                        },
                        new
                        {
                            Id = new Guid("87a61711-b6f7-422b-a1f0-82662bb25077"),
                            Description = "Duyong Field or Plant",
                            Name = "Duyong"
                        },
                        new
                        {
                            Id = new Guid("c658389e-f146-452f-a7bd-ac90eb42b25d"),
                            Description = "E11 Field or Plant",
                            Name = "E11"
                        },
                        new
                        {
                            Id = new Guid("d6b3ca8d-81d9-44ec-9caf-59a1a0a76254"),
                            Description = "Erb West Field or Plant",
                            Name = "Erb West"
                        },
                        new
                        {
                            Id = new Guid("0ead361b-8bc3-4359-a0e2-05fd27ff6dbc"),
                            Description = "GPP Field or Plant",
                            Name = "GPP"
                        },
                        new
                        {
                            Id = new Guid("c4d97318-7207-4461-b6d9-0b637c71e091"),
                            Description = "GST1 Field or Plant",
                            Name = "GST1"
                        },
                        new
                        {
                            Id = new Guid("8fe930c9-fdf4-4b9b-a2f0-de164b83b5fb"),
                            Description = "KAKG Field or Plant",
                            Name = "KAKG"
                        },
                        new
                        {
                            Id = new Guid("b92ddde2-acdc-40d2-8195-f190f19070ad"),
                            Description = "Kinabalu Field or Plant",
                            Name = "Kinabalu"
                        },
                        new
                        {
                            Id = new Guid("eed15056-0ce9-4d99-a347-2b88a95e6a9f"),
                            Description = "M1 Field or Plant",
                            Name = "M1"
                        },
                        new
                        {
                            Id = new Guid("37927c4f-c9e1-4d92-8b84-09bea547a030"),
                            Description = "MCOT Field or Plant",
                            Name = "MCOT"
                        },
                        new
                        {
                            Id = new Guid("d74fb67e-118f-4a4a-9462-ac85f22106fe"),
                            Description = "MLNG Dua Field or Plant",
                            Name = "MLNG Dua"
                        },
                        new
                        {
                            Id = new Guid("126b799f-2cf5-4225-a58d-bdb3731a8a64"),
                            Description = "MLNG Satu Field or Plant",
                            Name = "MLNG Satu"
                        },
                        new
                        {
                            Id = new Guid("50bc7979-4f5e-4cae-87a0-dfd669fb7d46"),
                            Description = "MLNG Tiga Field or Plant",
                            Name = "MLNG Tiga"
                        },
                        new
                        {
                            Id = new Guid("b4efc45c-5349-4c82-9061-5103bb9993b0"),
                            Description = "MRC Field or Plant",
                            Name = "MRC"
                        },
                        new
                        {
                            Id = new Guid("14c1d824-6155-486f-bdc1-b953a3fb8cfb"),
                            Description = "NC3 Field or Plant",
                            Name = "NC3"
                        },
                        new
                        {
                            Id = new Guid("4a270199-5870-4828-8d7e-2f7ef168d0c4"),
                            Description = "PCEPE Field or Plant",
                            Name = "PCEPE"
                        },
                        new
                        {
                            Id = new Guid("23e5527b-d159-46c6-bff7-981ad8651d33"),
                            Description = "PCFK Field or Plant",
                            Name = "PCFK"
                        },
                        new
                        {
                            Id = new Guid("e7790052-4521-4689-967e-02c2cfc2509a"),
                            Description = "PCLDPE & Ammonia Field or Plant",
                            Name = "PCLDPE & Ammonia"
                        },
                        new
                        {
                            Id = new Guid("ba0c4a91-bdb8-4272-b732-c0817b4f4444"),
                            Description = "PCML Field or Plant",
                            Name = "PCML"
                        },
                        new
                        {
                            Id = new Guid("467bb9f9-0b77-4987-a530-badcc66be8f5"),
                            Description = "PCMTBE Field or Plant",
                            Name = "PCMTBE"
                        },
                        new
                        {
                            Id = new Guid("854b8a3b-9c8b-4187-88bf-8967c5a474b2"),
                            Description = "PCOGD Field or Plant",
                            Name = "PCOGD"
                        },
                        new
                        {
                            Id = new Guid("6be3a4fd-24a0-4458-9c7d-dd474210b9ec"),
                            Description = "PFLNG1 Field or Plant",
                            Name = "PFLNG1"
                        },
                        new
                        {
                            Id = new Guid("768b2aae-0db8-4cc0-98ad-bf936db2c2f3"),
                            Description = "PFLNG2 Field or Plant",
                            Name = "PFLNG2"
                        },
                        new
                        {
                            Id = new Guid("8f4a8ace-bb24-47f3-9315-604178147aac"),
                            Description = "PIC1 Field or Plant",
                            Name = "PIC1"
                        },
                        new
                        {
                            Id = new Guid("9e12080d-f771-41b3-953a-fb6c606775d4"),
                            Description = "PPT Field or Plant",
                            Name = "PPT"
                        },
                        new
                        {
                            Id = new Guid("e24764d0-3c76-4630-b801-a05ac6a14d1b"),
                            Description = "PRSB Field or Plant",
                            Name = "PRSB"
                        },
                        new
                        {
                            Id = new Guid("d38692cd-4d6f-4aee-bb32-7dd9a9374244"),
                            Description = "Resak Field or Plant",
                            Name = "Resak"
                        },
                        new
                        {
                            Id = new Guid("5f08d260-2ec0-442b-82e5-33294a46b712"),
                            Description = "RGTP Field or Plant",
                            Name = "RGTP"
                        },
                        new
                        {
                            Id = new Guid("1134b649-480f-4903-acd4-3a54007b1b23"),
                            Description = "RGTSU Field or Plant",
                            Name = "RGTSU"
                        },
                        new
                        {
                            Id = new Guid("c8ed8f67-cda6-411f-8532-b3559e284448"),
                            Description = "SBGAST Field or Plant",
                            Name = "SBGAST"
                        },
                        new
                        {
                            Id = new Guid("f156ee0d-d80b-4fb8-8143-56537f8d2520"),
                            Description = "Sumandak Field or Plant",
                            Name = "Sumandak"
                        },
                        new
                        {
                            Id = new Guid("d2380672-dd44-49a9-b9a9-3ac0185af368"),
                            Description = "Tangga Barat Field or Plant",
                            Name = "Tangga Barat"
                        },
                        new
                        {
                            Id = new Guid("6c170d60-884b-422d-b62b-d533dfa97429"),
                            Description = "TCOT Field or Plant",
                            Name = "TCOT"
                        },
                        new
                        {
                            Id = new Guid("8eaccad3-d2aa-4de1-8b26-601d4a912bad"),
                            Description = "Terminal 1 Field or Plant",
                            Name = "Terminal 1"
                        },
                        new
                        {
                            Id = new Guid("0dfdce65-2877-4164-b701-706dc388ec46"),
                            Description = "TGAST Field or Plant",
                            Name = "TGAST"
                        },
                        new
                        {
                            Id = new Guid("fa52eeb7-e89a-45e3-be2c-ff8181b35a23"),
                            Description = "Tiong Field or Plant",
                            Name = "Tiong"
                        },
                        new
                        {
                            Id = new Guid("fe9b6b9b-d3e2-40ce-b665-fab93016d274"),
                            Description = "Train 9 Field or Plant",
                            Name = "Train 9"
                        },
                        new
                        {
                            Id = new Guid("15b9727e-04e1-40c0-b5d2-fb75538e84ed"),
                            Description = "UG Field or Plant",
                            Name = "UG"
                        },
                        new
                        {
                            Id = new Guid("34da4cab-21f5-46bd-b1a2-d8057c0e6b9f"),
                            Description = "UK Field or Plant",
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("70baf381-8c58-4e70-b2d9-734764144f6e"),
                            Description = "West Lutong Field or Plant",
                            Name = "West Lutong"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.HACDwgNo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("HACDwgNo_Name");

                    b.ToTable("HACDwgNos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("0a5567e3-a8ad-4c3d-a6d5-23996ac27c68"),
                            Name = "BAKP-B-X-0010-0 Rev.0"
                        },
                        new
                        {
                            Id = new Guid("796557ad-12b6-4bd5-a3d8-902c288bdc78"),
                            Name = "BAKP-B-X-0011-0 Rev.0"
                        },
                        new
                        {
                            Id = new Guid("94983962-7f6a-41b9-95c7-1cf1b28a9b6e"),
                            Name = "BAKP-B-X-0012-0 Rev.0"
                        },
                        new
                        {
                            Id = new Guid("1253eedb-95c4-4725-af4c-c664ea9afd57"),
                            Name = "BAKP-B-X-0013-0 Rev.0"
                        },
                        new
                        {
                            Id = new Guid("44e41f78-c4a1-4874-919b-7161c9582412"),
                            Name = "BAKP-B-X-0014-0 Rev.Z1"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateAuthority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("IECExCertificateAuthority_Name");

                    b.ToTable("IECExCertificateAuthorities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("c93078e3-7067-4493-a5ad-0a312731bae9"),
                            Name = "PTB"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("IECExCertificateCategory_Name");

                    b.ToTable("IECExCertificateCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("bec84a12-db91-4cb9-999e-bdf44e74e109"),
                            Name = "Component Cert"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("No");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("IECExCertificateDetail_Name");

                    b.ToTable("IECExCertificateDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("0ee93cef-fd02-4232-aefa-d4b82b651421"),
                            Name = "Det-01"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateNo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("No");

                    b.HasKey("Id");

                    b.HasAlternateKey("No")
                        .HasName("IECExCertificateNo_No");

                    b.ToTable("IECExCertificateNos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            No = "-"
                        },
                        new
                        {
                            Id = new Guid("db02b94f-6fcf-40ee-8fb4-7da02c74c1b6"),
                            No = "PTB 02ATEX 3068"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Inspection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateDeleted")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateDeleted");

                    b.Property<DateTime>("DateInspectionEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateInspectionEnd");

                    b.Property<DateTime>("DateInspectionStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateInspectionStart");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdated");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<Guid>("Id_CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_CreatedBy");

                    b.Property<Guid>("Id_DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_DeletedBy");

                    b.Property<Guid>("Id_Discipline")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Discipline");

                    b.Property<Guid>("Id_InspectionType")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_InspectionType");

                    b.Property<Guid>("Id_OPU")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_OPU");

                    b.Property<Guid>("Id_Platform")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Platform");

                    b.Property<Guid>("Id_UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_UpdatedBy");

                    b.Property<Guid>("Id_User")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Id_Discipline");

                    b.HasIndex("Id_InspectionType");

                    b.HasIndex("Id_OPU");

                    b.HasIndex("Id_Platform");

                    b.HasIndex("Id_User");

                    b.ToTable("Inspections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f38055b9-c70f-4622-91f5-4493b4be1611"),
                            Active = true,
                            DateCreated = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9028),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInspectionEnd = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9026),
                            DateInspectionStart = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9026),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description 1",
                            IdCreatedBy = new Guid("eb47cb7a-eeae-4867-be98-8566a9ffe208"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDiscipline = new Guid("ac1f5b06-1699-4673-9db8-77f4ea3dd0e8"),
                            IdInspectionType = new Guid("2afe51d9-2270-4992-8a5f-bf95e002798b"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdPlatform = new Guid("060128ee-e126-494d-979f-767f203f11a4"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdUser = new Guid("c74611f6-a99f-44b4-88fd-e00e00fcff5a"),
                            Name = "Sample 1"
                        },
                        new
                        {
                            Id = new Guid("e26bc764-4b36-4984-9d44-d29acc3d3849"),
                            Active = true,
                            DateCreated = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9036),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInspectionEnd = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9035),
                            DateInspectionStart = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9034),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description 2",
                            IdCreatedBy = new Guid("eb47cb7a-eeae-4867-be98-8566a9ffe208"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDiscipline = new Guid("ac1f5b06-1699-4673-9db8-77f4ea3dd0e8"),
                            IdInspectionType = new Guid("2afe51d9-2270-4992-8a5f-bf95e002798b"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdPlatform = new Guid("060128ee-e126-494d-979f-767f203f11a4"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdUser = new Guid("c74611f6-a99f-44b4-88fd-e00e00fcff5a"),
                            Name = "Sample 2"
                        },
                        new
                        {
                            Id = new Guid("c916d1a9-4592-4b49-bf64-afecd274ab41"),
                            Active = true,
                            DateCreated = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9043),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateInspectionEnd = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9042),
                            DateInspectionStart = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(9041),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description 3",
                            IdCreatedBy = new Guid("eb47cb7a-eeae-4867-be98-8566a9ffe208"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDiscipline = new Guid("ac1f5b06-1699-4673-9db8-77f4ea3dd0e8"),
                            IdInspectionType = new Guid("2afe51d9-2270-4992-8a5f-bf95e002798b"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdPlatform = new Guid("060128ee-e126-494d-979f-767f203f11a4"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdUser = new Guid("c74611f6-a99f-44b4-88fd-e00e00fcff5a"),
                            Name = "Sample 3"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.InspectionEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Coordinate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Coordinate");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateDeleted")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateDeleted");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdated");

                    b.Property<string>("Discipline")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Discipline");

                    b.Property<string>("ElectricalRating")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ElectricalRating");

                    b.Property<string>("HACDwgNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("HACDwgNo");

                    b.Property<string>("IECExCertificateAuthority")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IECExCertificateAuthority");

                    b.Property<string>("IECExCertificateCategory")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IECExCertificateCategory");

                    b.Property<string>("IECExCertificateDetail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IECExCertificateDetail");

                    b.Property<string>("IECExCertificateNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("IECExCertificateNo");

                    b.Property<Guid>("Id_CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_CreatedBy");

                    b.Property<Guid>("Id_DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_DeletedBy");

                    b.Property<Guid>("Id_Inspection")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Inspection");

                    b.Property<Guid>("Id_Risk")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Risk");

                    b.Property<Guid>("Id_UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_UpdatedBy");

                    b.Property<string>("LocationOne")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LocationOne");

                    b.Property<string>("LocationTwo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LocationTwo");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("OPU")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("OPU");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Platform");

                    b.Property<string>("ProtectionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ProtectionType");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Purpose");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SerialNo");

                    b.Property<string>("TagNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TagNo");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Zone");

                    b.HasKey("Id");

                    b.HasIndex("Id_Inspection");

                    b.HasIndex("Id_Risk");

                    b.ToTable("InspectionEquipment");
                });

            modelBuilder.Entity("IMExApi.Models.InspectionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("InspectionType_Name");

                    b.ToTable("InspectionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11497dcb-0010-408a-b175-b550ba8a421a"),
                            Description = "Initial Inspection",
                            Name = "Initial Inspection"
                        },
                        new
                        {
                            Id = new Guid("7b4413a2-67a3-4a31-843a-b574ce581ddc"),
                            Description = "Full Inspection",
                            Name = "Full Inspection"
                        },
                        new
                        {
                            Id = new Guid("03b223f8-58f5-442a-abf8-4540b4067634"),
                            Description = "Risk-Based Inspection",
                            Name = "Risk-Based Inspection"
                        },
                        new
                        {
                            Id = new Guid("2afe51d9-2270-4992-8a5f-bf95e002798b"),
                            Description = "Sample Inspection",
                            Name = "Sample Inspection"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.LocationOne", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("LocationOne_Name");

                    b.ToTable("LocationOnes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("335529ad-04c4-4934-a319-9c3e2d428c02"),
                            Name = "R-301"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.LocationTwo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("LocationTwo_Name");

                    b.ToTable("LocationTwos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("a64c5cab-964f-4c37-9629-d9e35671bc81"),
                            Name = "A-2900"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Manufacturer_Name");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("03ddb1e6-7510-46ec-af6a-c4bef07efb02"),
                            Name = "SIEMENS"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Model_Name");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("2160fa79-a8d4-4ed0-9583-92bbd572726c"),
                            Name = "IMA6 223-4DC69-Z"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.OPU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("Id_Business")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Business");

                    b.Property<Guid>("Id_Field")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Field");

                    b.Property<Guid>("Id_Region")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Region");

                    b.HasKey("Id");

                    b.HasAlternateKey("Id_Business", "Id_Region", "Id_Field");

                    b.HasIndex("Id_Field");

                    b.HasIndex("Id_Region");

                    b.ToTable("OPUs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5ffb83f-0b07-4d55-91ca-00adb692a00a"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("b4efc45c-5349-4c82-9061-5103bb9993b0"),
                            IdRegion = new Guid("0ab107a0-d483-4aa0-a451-7ea62a965975")
                        },
                        new
                        {
                            Id = new Guid("2c08a19a-16d5-4434-9d49-39d8c4d6edf9"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("9e12080d-f771-41b3-953a-fb6c606775d4"),
                            IdRegion = new Guid("0ab107a0-d483-4aa0-a451-7ea62a965975")
                        },
                        new
                        {
                            Id = new Guid("c8c9366a-3dde-43b9-91e4-58fb2a477718"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("4a270199-5870-4828-8d7e-2f7ef168d0c4"),
                            IdRegion = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f")
                        },
                        new
                        {
                            Id = new Guid("e8cbc236-331a-4496-bd86-19874b6d2ec0"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("23e5527b-d159-46c6-bff7-981ad8651d33"),
                            IdRegion = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f")
                        },
                        new
                        {
                            Id = new Guid("4f3b3ce5-4f77-469f-a222-a21fa0da26af"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("e7790052-4521-4689-967e-02c2cfc2509a"),
                            IdRegion = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f")
                        },
                        new
                        {
                            Id = new Guid("9ef829a1-3f7d-4438-941b-7cf2a4535f64"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("ba0c4a91-bdb8-4272-b732-c0817b4f4444"),
                            IdRegion = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f")
                        },
                        new
                        {
                            Id = new Guid("8bdce0f4-e03b-4b54-94aa-ec7aafa7e9c0"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("467bb9f9-0b77-4987-a530-badcc66be8f5"),
                            IdRegion = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f")
                        },
                        new
                        {
                            Id = new Guid("5a8b9879-2621-454d-b99c-105e48a0dcd4"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("854b8a3b-9c8b-4187-88bf-8967c5a474b2"),
                            IdRegion = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f")
                        },
                        new
                        {
                            Id = new Guid("f5e91413-c273-4bd6-a890-e9d252443863"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("8eaccad3-d2aa-4de1-8b26-601d4a912bad"),
                            IdRegion = new Guid("543687a8-b584-4d46-a692-2d0b6607a9b0")
                        },
                        new
                        {
                            Id = new Guid("ad0e6ce1-2c54-4594-9812-f805f601c13e"),
                            IdBusiness = new Guid("f57dd90c-8787-4e02-97a9-2a2be301692b"),
                            IdField = new Guid("8f4a8ace-bb24-47f3-9315-604178147aac"),
                            IdRegion = new Guid("67566a97-babe-492c-a14d-0f4b103861d9")
                        },
                        new
                        {
                            Id = new Guid("3b80d4ec-a639-41f6-a8cb-595b7e350e8d"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("d74fb67e-118f-4a4a-9462-ac85f22106fe"),
                            IdRegion = new Guid("2b394efe-04c4-460d-937f-6457da94d673")
                        },
                        new
                        {
                            Id = new Guid("508416c3-5770-4f42-9a7f-d5bea42c9e55"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("126b799f-2cf5-4225-a58d-bdb3731a8a64"),
                            IdRegion = new Guid("2b394efe-04c4-460d-937f-6457da94d673")
                        },
                        new
                        {
                            Id = new Guid("44f4889a-f93c-4587-abc2-508c5493ffb2"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("50bc7979-4f5e-4cae-87a0-dfd669fb7d46"),
                            IdRegion = new Guid("2b394efe-04c4-460d-937f-6457da94d673")
                        },
                        new
                        {
                            Id = new Guid("e653aae5-f90d-4481-984f-75284dfc0700"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("fe9b6b9b-d3e2-40ce-b665-fab93016d274"),
                            IdRegion = new Guid("2b394efe-04c4-460d-937f-6457da94d673")
                        },
                        new
                        {
                            Id = new Guid("9837000c-b846-4753-a1f5-ed3a7f160b31"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("768b2aae-0db8-4cc0-98ad-bf936db2c2f3"),
                            IdRegion = new Guid("c2b96baf-1596-467f-befb-b65034cd03b6")
                        },
                        new
                        {
                            Id = new Guid("29fb2310-06e9-404b-b531-f27866e2aa96"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("6be3a4fd-24a0-4458-9c7d-dd474210b9ec"),
                            IdRegion = new Guid("7352acb6-9e0d-4919-9f88-36798c487d86")
                        },
                        new
                        {
                            Id = new Guid("2b019bfa-a5b9-4bf0-ae58-1573ab026a64"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("0ead361b-8bc3-4359-a0e2-05fd27ff6dbc"),
                            IdRegion = new Guid("29e8d7f6-dc93-4c1a-b419-324f4df84c4c")
                        },
                        new
                        {
                            Id = new Guid("9c15b517-0172-4a62-9c4d-e3ecccae56be"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("5f08d260-2ec0-442b-82e5-33294a46b712"),
                            IdRegion = new Guid("29e8d7f6-dc93-4c1a-b419-324f4df84c4c")
                        },
                        new
                        {
                            Id = new Guid("818b7d56-7080-426e-8a77-42c0337d5b3c"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("1134b649-480f-4903-acd4-3a54007b1b23"),
                            IdRegion = new Guid("29e8d7f6-dc93-4c1a-b419-324f4df84c4c")
                        },
                        new
                        {
                            Id = new Guid("676534a7-458e-4fdd-9800-12f14ab4005a"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("15b9727e-04e1-40c0-b5d2-fb75538e84ed"),
                            IdRegion = new Guid("29e8d7f6-dc93-4c1a-b419-324f4df84c4c")
                        },
                        new
                        {
                            Id = new Guid("327688db-ff1a-43a5-ab2c-f723a4fdce1c"),
                            IdBusiness = new Guid("d9817472-69ee-45ff-b4d9-e7682a8f5c42"),
                            IdField = new Guid("34da4cab-21f5-46bd-b1a2-d8057c0e6b9f"),
                            IdRegion = new Guid("29e8d7f6-dc93-4c1a-b419-324f4df84c4c")
                        },
                        new
                        {
                            Id = new Guid("88f4790f-a51f-4c9c-8b30-5c24b7c0113a"),
                            IdBusiness = new Guid("09d96c70-294e-486f-8fb0-624983bcef62"),
                            IdField = new Guid("e24764d0-3c76-4630-b801-a05ac6a14d1b"),
                            IdRegion = new Guid("85617285-d381-4070-be9c-2e0e924d65e0")
                        },
                        new
                        {
                            Id = new Guid("c875803e-2628-463e-8376-d7e6cc828a47"),
                            IdBusiness = new Guid("09d96c70-294e-486f-8fb0-624983bcef62"),
                            IdField = new Guid("c4d97318-7207-4461-b6d9-0b637c71e091"),
                            IdRegion = new Guid("054a0a4d-4cc1-4449-9904-e10a80becae0")
                        },
                        new
                        {
                            Id = new Guid("fbafc3c9-0d09-4b93-839e-cc1ba7df9997"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("b189b3ed-c6f8-4c49-8b2c-3f5d4dd4a3f6"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("a88deac5-b0fc-448d-bb5f-9e137c4b4f37"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("d9c7b872-c002-49e8-85ef-14db7a9ca88d"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("b22dd8bf-cc06-4a92-a564-6aca6383b26a"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("87a61711-b6f7-422b-a1f0-82662bb25077"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("7b4a12a7-c8cf-4f5f-8ea2-69bc3043ddd3"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("d38692cd-4d6f-4aee-bb32-7dd9a9374244"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("0a50c968-85e9-4e58-b587-c9cd3c7aefde"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("d2380672-dd44-49a9-b9a9-3ac0185af368"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("0dfdce65-2877-4164-b701-706dc388ec46"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("b981ea97-810c-4d0d-8f09-9e3ef869cea0"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("fa52eeb7-e89a-45e3-be2c-ff8181b35a23"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("58ef8a4a-ff8d-450a-a5f3-297838299bdb"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("6c170d60-884b-422d-b62b-d533dfa97429"),
                            IdRegion = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c")
                        },
                        new
                        {
                            Id = new Guid("831b80b3-033d-42c9-9b05-a23b7f0db8a1"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("d6b3ca8d-81d9-44ec-9caf-59a1a0a76254"),
                            IdRegion = new Guid("5c35ccd2-aac8-4b6d-980a-d580766a05a3")
                        },
                        new
                        {
                            Id = new Guid("f3c463c9-d905-4788-9e00-68ab6bce6503"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("b92ddde2-acdc-40d2-8195-f190f19070ad"),
                            IdRegion = new Guid("5c35ccd2-aac8-4b6d-980a-d580766a05a3")
                        },
                        new
                        {
                            Id = new Guid("959d01a1-7b02-45d3-b1dc-dcd264c56700"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("c8ed8f67-cda6-411f-8532-b3559e284448"),
                            IdRegion = new Guid("5c35ccd2-aac8-4b6d-980a-d580766a05a3")
                        },
                        new
                        {
                            Id = new Guid("88924899-cf63-42a6-ad70-13a0a78c6410"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("f156ee0d-d80b-4fb8-8143-56537f8d2520"),
                            IdRegion = new Guid("5c35ccd2-aac8-4b6d-980a-d580766a05a3")
                        },
                        new
                        {
                            Id = new Guid("81e0ea2c-72f1-4532-ada1-57b762afd176"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("254c3a4b-91a1-4077-b89c-757fc69f5910"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("322cc61f-ce35-40ae-958a-bc8a902cf500"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("2230a41f-5200-4c9e-aa85-5d9bbfed8fc6"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("af1674dd-b2f0-4296-821b-18811eca1cef"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("b69125e2-89cc-4d96-9db4-9ca9297da146"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("f2753c54-35b1-4dbe-9dcc-9b432762d308"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("c658389e-f146-452f-a7bd-ac90eb42b25d"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("667e644c-2416-47b4-a614-92b8702cd82e"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("8fe930c9-fdf4-4b9b-a2f0-de164b83b5fb"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("2cedbbea-1a47-4d76-91e7-54095d5b340b"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("eed15056-0ce9-4d99-a347-2b88a95e6a9f"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("3bc32c28-f7b1-49ae-ab76-d349bed51b27"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("37927c4f-c9e1-4d92-8b84-09bea547a030"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("bd72b1e2-e7b4-438c-8edd-77837913f216"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("14c1d824-6155-486f-bdc1-b953a3fb8cfb"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        },
                        new
                        {
                            Id = new Guid("d03cc06f-cbb7-4ff5-a330-f8a79d04577f"),
                            IdBusiness = new Guid("b42742a6-9a0a-4458-8d74-953874576182"),
                            IdField = new Guid("70baf381-8c58-4e70-b2d9-734764144f6e"),
                            IdRegion = new Guid("45946328-7a29-4731-abfa-a33aea03ed00")
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Platform_Name");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("060128ee-e126-494d-979f-767f203f11a4"),
                            Name = "BAKP-B"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.ProtectionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("ProtectionType_Name");

                    b.ToTable("ProtectionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33bf41bf-8b76-4057-8f51-a8c6ef51c346"),
                            Name = "ex a"
                        },
                        new
                        {
                            Id = new Guid("7fbf3205-4bc8-4622-ad4e-f85b4d3c0098"),
                            Name = "ex b"
                        },
                        new
                        {
                            Id = new Guid("c21f5c15-addc-4d0b-b273-0c34dfd04504"),
                            Name = "ex c"
                        },
                        new
                        {
                            Id = new Guid("d63f18b9-c184-4a3d-a6b2-4acd8846b4fa"),
                            Name = "ex d"
                        },
                        new
                        {
                            Id = new Guid("e045fb56-ffae-4e57-b6bf-0b267739c765"),
                            Name = "ex e"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Purpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Purpose_Name");

                    b.ToTable("Purposes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("274ab1b4-75fc-4a71-babf-fb8101a2634b"),
                            Name = "Motor"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Description")
                        .HasName("Region_Description");

                    b.HasAlternateKey("Name")
                        .HasName("Region_Name");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85617285-d381-4070-be9c-2e0e924d65e0"),
                            Description = "GR&T Region or Segment",
                            Name = "GR&T"
                        },
                        new
                        {
                            Id = new Guid("054a0a4d-4cc1-4449-9904-e10a80becae0"),
                            Description = "GST Region or Segment",
                            Name = "GST"
                        },
                        new
                        {
                            Id = new Guid("2b394efe-04c4-460d-937f-6457da94d673"),
                            Description = "MLNG Region or Segment",
                            Name = "MLNG"
                        },
                        new
                        {
                            Id = new Guid("543687a8-b584-4d46-a692-2d0b6607a9b0"),
                            Description = "PDB Region or Segment",
                            Name = "PDB"
                        },
                        new
                        {
                            Id = new Guid("1b019d73-2b4b-468c-a539-242a1bd4917f"),
                            Description = "Petrochemical Region or Segment",
                            Name = "Petrochemical"
                        },
                        new
                        {
                            Id = new Guid("c2b96baf-1596-467f-befb-b65034cd03b6"),
                            Description = "PFLNG Dua Region or Segment",
                            Name = "PFLNG Dua"
                        },
                        new
                        {
                            Id = new Guid("7352acb6-9e0d-4919-9f88-36798c487d86"),
                            Description = "PFLNG Satu Region or Segment",
                            Name = "PFLNG Satu"
                        },
                        new
                        {
                            Id = new Guid("29e8d7f6-dc93-4c1a-b419-324f4df84c4c"),
                            Description = "PGB Region or Segment",
                            Name = "PGB"
                        },
                        new
                        {
                            Id = new Guid("67566a97-babe-492c-a14d-0f4b103861d9"),
                            Description = "PIC Region or Segment",
                            Name = "PIC"
                        },
                        new
                        {
                            Id = new Guid("c202adf7-9b3b-429f-b79e-00498235eb0c"),
                            Description = "PMA PlRegion or Segmentant",
                            Name = "PMA"
                        },
                        new
                        {
                            Id = new Guid("0ab107a0-d483-4aa0-a451-7ea62a965975"),
                            Description = "Refinery Region or Segment",
                            Name = "Refinery"
                        },
                        new
                        {
                            Id = new Guid("5c35ccd2-aac8-4b6d-980a-d580766a05a3"),
                            Description = "SBA Region or Segment",
                            Name = "SBA"
                        },
                        new
                        {
                            Id = new Guid("45946328-7a29-4731-abfa-a33aea03ed00"),
                            Description = "SKA Region or Segment",
                            Name = "SKA"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Risk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Risk_Name");

                    b.ToTable("Risks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ec4c843-135f-4b46-9418-a81c1ce58b3a"),
                            Description = "Not Applicable",
                            Name = "N/A"
                        },
                        new
                        {
                            Id = new Guid("ae95ff88-5eae-431f-9928-33d5b6820691"),
                            Description = "Low Risk",
                            Name = "Low"
                        },
                        new
                        {
                            Id = new Guid("80c71cf4-7da5-4d18-b986-3c423d60bdc6"),
                            Description = "Medium Risk",
                            Name = "Meium"
                        },
                        new
                        {
                            Id = new Guid("3c088619-e0c6-41c3-b432-36e85ecce964"),
                            Description = "High Risk",
                            Name = "High"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Role_Name");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ce8eda9-bde9-4015-b7eb-392d82069ba0"),
                            Code = "ISA",
                            Description = "IMEx System Admin (GTS SMEs, System Admin)",
                            Name = "System Admin"
                        },
                        new
                        {
                            Id = new Guid("922c4b00-490b-4a5e-a926-3a34a90f27bf"),
                            Code = "CV",
                            Description = "Central Viewer",
                            Name = "Central Viewer"
                        },
                        new
                        {
                            Id = new Guid("ba5b59fb-b934-494b-866a-44d6dec9ef91"),
                            Code = "OA",
                            Description = "OPU Admin",
                            Name = "OPU Admin"
                        },
                        new
                        {
                            Id = new Guid("2fdd9c02-064b-4ac9-9f64-5ad91be34cf5"),
                            Code = "OE",
                            Description = "OPU Engineer",
                            Name = "OPU Engineer"
                        },
                        new
                        {
                            Id = new Guid("e437bbb9-5be3-4e4b-9501-dc9d80b91e55"),
                            Code = "I",
                            Description = "Inspector Internal",
                            Name = "Inspector Internal"
                        },
                        new
                        {
                            Id = new Guid("6aad1ca6-4e06-4508-ba95-ae8828dd59db"),
                            Code = "IN",
                            Description = "Inspector External",
                            Name = "Inspector External"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.SerialNo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("SerialNo_Name");

                    b.ToTable("SerialNos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("938704b5-ae75-40c4-b696-8b102d5a15ae"),
                            Name = "-"
                        },
                        new
                        {
                            Id = new Guid("bf8e4e4b-ee85-42f3-a43e-2b84e88b1d1e"),
                            Name = "UC 0506/068036901 IM V3"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateDeleted")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateDeleted");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateUpdated");

                    b.Property<DateTime>("DateValidEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateValidEnd");

                    b.Property<DateTime>("DateValidStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateValidStart");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FirstName");

                    b.Property<Guid>("Id_CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_CreatedBy");

                    b.Property<Guid>("Id_DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_DeletedBy");

                    b.Property<Guid>("Id_OPU")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_OPU");

                    b.Property<Guid>("Id_Role")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_Role");

                    b.Property<Guid>("Id_UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id_UpdatedBy");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserPassword");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasAlternateKey("LastName")
                        .HasName("User_LastName");

                    b.HasAlternateKey("UserName")
                        .HasName("User_UserName");

                    b.HasIndex("Id_OPU");

                    b.HasIndex("Id_Role");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25991b17-6107-429e-8284-477114e5a0f8"),
                            Active = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateValidEnd = new DateTime(2026, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(119),
                            DateValidStart = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(117),
                            FirstName = "Alex",
                            IdCreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdRole = new Guid("ba5b59fb-b934-494b-866a-44d6dec9ef91"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            LastName = "Ronald Gomez",
                            Password = "5c30c68af479608433102e2d2ae6ab53eccd2565",
                            UserName = "alex.gomez@smartcore.group"
                        },
                        new
                        {
                            Id = new Guid("c74611f6-a99f-44b4-88fd-e00e00fcff5a"),
                            Active = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateValidEnd = new DateTime(2026, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(132),
                            DateValidStart = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(131),
                            FirstName = "Shahin",
                            IdCreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdRole = new Guid("ba5b59fb-b934-494b-866a-44d6dec9ef91"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            LastName = "Bin Hasan",
                            Password = "5c30c68af479608433102e2d2ae6ab53eccd2565",
                            UserName = "shahin.hassan@smartcore.group"
                        },
                        new
                        {
                            Id = new Guid("451ffde1-3eae-4455-8e89-78c87c1009f9"),
                            Active = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateDeleted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateValidEnd = new DateTime(2026, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(136),
                            DateValidStart = new DateTime(2023, 2, 28, 3, 25, 58, 420, DateTimeKind.Utc).AddTicks(136),
                            FirstName = "Nur Hafizah",
                            IdCreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdDeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdOPU = new Guid("1f0565ee-1ebd-48d0-adfc-37fcf00c810f"),
                            IdRole = new Guid("ba5b59fb-b934-494b-866a-44d6dec9ef91"),
                            IdUpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            LastName = "Binti Musa",
                            Password = "5c30c68af479608433102e2d2ae6ab53eccd2565",
                            UserName = "hafizah@smartcore.group"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Zone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("Zone_Name");

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc288ecb-841c-4c6a-b34f-91256ee183d8"),
                            Name = "Z2"
                        });
                });

            modelBuilder.Entity("IMExApi.Models.Equipment", b =>
                {
                    b.HasOne("IMExApi.Models.Coordinate", "Coordinate")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Coordinate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Discipline", "Discipline")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Discipline")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.ElectricalRating", "ElectricalRating")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_ElectricalRating")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.HACDwgNo", "HACDwgNo")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_HACDwgNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.IECExCertificateAuthority", "IECExCertificateAuthority")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_IECExCertificateAuthority")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.IECExCertificateCategory", "IECExCertificateCategory")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_IECExCertificateCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.IECExCertificateDetail", "IECExCertificateDetail")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_IECExCertificateDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.IECExCertificateNo", "IECExCertificateNo")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_IECExCertificateNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.LocationOne", "LocationOne")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_LocationOne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.LocationTwo", "LocationTwo")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_LocationTwo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Manufacturer", "Manufacturer")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Manufacturer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Model", "Model")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Model")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.OPU", "OPU")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_OPU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Platform", "Platform")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Platform")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.ProtectionType", "ProtectionType")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_ProtectionType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Purpose", "Purpose")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Purpose")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.SerialNo", "SerialNo")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_SerialNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Zone", "Zone")
                        .WithMany("Equipments")
                        .HasForeignKey("Id_Zone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinate");

                    b.Navigation("Discipline");

                    b.Navigation("ElectricalRating");

                    b.Navigation("HACDwgNo");

                    b.Navigation("IECExCertificateAuthority");

                    b.Navigation("IECExCertificateCategory");

                    b.Navigation("IECExCertificateDetail");

                    b.Navigation("IECExCertificateNo");

                    b.Navigation("LocationOne");

                    b.Navigation("LocationTwo");

                    b.Navigation("Manufacturer");

                    b.Navigation("Model");

                    b.Navigation("OPU");

                    b.Navigation("Platform");

                    b.Navigation("ProtectionType");

                    b.Navigation("Purpose");

                    b.Navigation("SerialNo");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("IMExApi.Models.Inspection", b =>
                {
                    b.HasOne("IMExApi.Models.Discipline", "Discipline")
                        .WithMany("Inspections")
                        .HasForeignKey("Id_Discipline")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.InspectionType", "InspectionType")
                        .WithMany("Inspections")
                        .HasForeignKey("Id_InspectionType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.OPU", "OPU")
                        .WithMany("Inspections")
                        .HasForeignKey("Id_OPU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Platform", "Platform")
                        .WithMany("Inspections")
                        .HasForeignKey("Id_Platform")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.User", "User")
                        .WithMany("Inspections")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("InspectionType");

                    b.Navigation("OPU");

                    b.Navigation("Platform");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IMExApi.Models.InspectionEquipment", b =>
                {
                    b.HasOne("IMExApi.Models.Inspection", "Inspection")
                        .WithMany("InspectionEquipments")
                        .HasForeignKey("Id_Inspection")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Risk", "Risk")
                        .WithMany("InspectionEquipments")
                        .HasForeignKey("Id_Risk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspection");

                    b.Navigation("Risk");
                });

            modelBuilder.Entity("IMExApi.Models.OPU", b =>
                {
                    b.HasOne("IMExApi.Models.Business", "Business")
                        .WithMany("OPU")
                        .HasForeignKey("Id_Business")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Field", "Field")
                        .WithMany("OPU")
                        .HasForeignKey("Id_Field")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Region", "Region")
                        .WithMany("OPU")
                        .HasForeignKey("Id_Region")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Field");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("IMExApi.Models.User", b =>
                {
                    b.HasOne("IMExApi.Models.OPU", "OPU")
                        .WithMany("Users")
                        .HasForeignKey("Id_OPU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMExApi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Id_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPU");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IMExApi.Models.Business", b =>
                {
                    b.Navigation("OPU");
                });

            modelBuilder.Entity("IMExApi.Models.Coordinate", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Discipline", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("Inspections");
                });

            modelBuilder.Entity("IMExApi.Models.ElectricalRating", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Field", b =>
                {
                    b.Navigation("OPU");
                });

            modelBuilder.Entity("IMExApi.Models.HACDwgNo", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateAuthority", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateCategory", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateDetail", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.IECExCertificateNo", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Inspection", b =>
                {
                    b.Navigation("InspectionEquipments");
                });

            modelBuilder.Entity("IMExApi.Models.InspectionType", b =>
                {
                    b.Navigation("Inspections");
                });

            modelBuilder.Entity("IMExApi.Models.LocationOne", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.LocationTwo", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Manufacturer", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Model", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.OPU", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("Inspections");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("IMExApi.Models.Platform", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("Inspections");
                });

            modelBuilder.Entity("IMExApi.Models.ProtectionType", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Purpose", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.Region", b =>
                {
                    b.Navigation("OPU");
                });

            modelBuilder.Entity("IMExApi.Models.Risk", b =>
                {
                    b.Navigation("InspectionEquipments");
                });

            modelBuilder.Entity("IMExApi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("IMExApi.Models.SerialNo", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("IMExApi.Models.User", b =>
                {
                    b.Navigation("Inspections");
                });

            modelBuilder.Entity("IMExApi.Models.Zone", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
